// cdk8s-secrets-store-csi-driver
package cdk8ssecretsstorecsidriver

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/opencdk8s/cdk8s-secrets-store-csi-driver-go/cdk8ssecretsstorecsidriver/jsii"

	"github.com/aws/constructs-go/constructs/v3"
	"github.com/cdk8s-team/cdk8s-core-go/cdk8s"
	"github.com/opencdk8s/cdk8s-secrets-store-csi-driver-go/cdk8ssecretsstorecsidriver/internal"
	"github.com/opencdk8s/cdk8s-secrets-store-csi-driver-go/cdk8ssecretsstorecsidriver/k8s"
)

// Experimental.
type ByPodStatus struct {
	// Experimental.
	Id *string `field:"optional" json:"id" yaml:"id"`
	// Experimental.
	Namespace *string `field:"optional" json:"namespace" yaml:"namespace"`
}

// Experimental.
type Provider string

const (
	// Experimental.
	Provider_AWS Provider = "AWS"
	// Experimental.
	Provider_VAULT Provider = "VAULT"
	// Experimental.
	Provider_AZURE Provider = "AZURE"
	// Experimental.
	Provider_GCP Provider = "GCP"
)

// Experimental.
type SecretObject struct {
	// Experimental.
	Annotations *map[string]*string `field:"optional" json:"annotations" yaml:"annotations"`
	// Experimental.
	Data *[]*SecretObjectData `field:"optional" json:"data" yaml:"data"`
	// Experimental.
	Labels *map[string]*string `field:"optional" json:"labels" yaml:"labels"`
	// Experimental.
	SecretName *string `field:"optional" json:"secretName" yaml:"secretName"`
	// Experimental.
	Type *string `field:"optional" json:"type" yaml:"type"`
}

// Experimental.
type SecretObjectData struct {
	// Experimental.
	Key *string `field:"optional" json:"key" yaml:"key"`
	// Experimental.
	ObjectName *string `field:"optional" json:"objectName" yaml:"objectName"`
}

// Experimental.
type SecretProviderClass interface {
	cdk8s.ApiObject
	// The group portion of the API version (e.g. `authorization.k8s.io`).
	// Experimental.
	ApiGroup() *string
	// The object's API version (e.g. `authorization.k8s.io/v1`).
	// Experimental.
	ApiVersion() *string
	// The chart in which this object is defined.
	// Experimental.
	Chart() cdk8s.Chart
	// The object kind.
	// Experimental.
	Kind() *string
	// Metadata associated with this API object.
	// Experimental.
	Metadata() cdk8s.ApiObjectMetadataDefinition
	// The name of the API object.
	//
	// If a name is specified in `metadata.name` this will be the name returned.
	// Otherwise, a name will be generated by calling
	// `Chart.of(this).generatedObjectName(this)`, which by default uses the
	// construct path to generate a DNS-compatible name for the resource.
	// Experimental.
	Name() *string
	// Create a dependency between this ApiObject and other constructs.
	//
	// These can be other ApiObjects, Charts, or custom.
	// Experimental.
	AddDependency(dependencies ...constructs.IConstruct)
	// Applies a set of RFC-6902 JSON-Patch operations to the manifest synthesized for this API object.
	//
	// Example:
	//     kubePod.addJsonPatch(JsonPatch.replace('/spec/enableServiceLinks', true));
	//
	// Experimental.
	AddJsonPatch(ops ...cdk8s.JsonPatch)
	// Perform final modifications before synthesis.
	//
	// This method can be implemented by derived constructs in order to perform
	// final changes before synthesis. prepare() will be called after child
	// constructs have been prepared.
	//
	// This is an advanced framework feature. Only use this if you
	// understand the implications.
	// Experimental.
	OnPrepare()
	// Allows this construct to emit artifacts into the cloud assembly during synthesis.
	//
	// This method is usually implemented by framework-level constructs such as `Stack` and `Asset`
	// as they participate in synthesizing the cloud assembly.
	// Experimental.
	OnSynthesize(session constructs.ISynthesisSession)
	// Validate the current construct.
	//
	// This method can be implemented by derived constructs in order to perform
	// validation logic. It is called on all constructs before synthesis.
	//
	// Returns: An array of validation error messages, or an empty array if there the construct is valid.
	// Deprecated: use `Node.addValidation()` to subscribe validation functions on this construct
	// instead of overriding this method.
	OnValidate() *[]*string
	// Renders the object to Kubernetes JSON.
	//
	// To disable sorting of dictionary keys in output object set the
	// `CDK8S_DISABLE_SORT` environment variable to any non-empty value.
	// Experimental.
	ToJson() interface{}
	// Returns a string representation of this construct.
	// Experimental.
	ToString() *string
}

// The jsii proxy struct for SecretProviderClass
type jsiiProxy_SecretProviderClass struct {
	internal.Type__cdk8sApiObject
}

func (j *jsiiProxy_SecretProviderClass) ApiGroup() *string {
	var returns *string
	_jsii_.Get(
		j,
		"apiGroup",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_SecretProviderClass) ApiVersion() *string {
	var returns *string
	_jsii_.Get(
		j,
		"apiVersion",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_SecretProviderClass) Chart() cdk8s.Chart {
	var returns cdk8s.Chart
	_jsii_.Get(
		j,
		"chart",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_SecretProviderClass) Kind() *string {
	var returns *string
	_jsii_.Get(
		j,
		"kind",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_SecretProviderClass) Metadata() cdk8s.ApiObjectMetadataDefinition {
	var returns cdk8s.ApiObjectMetadataDefinition
	_jsii_.Get(
		j,
		"metadata",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_SecretProviderClass) Name() *string {
	var returns *string
	_jsii_.Get(
		j,
		"name",
		&returns,
	)
	return returns
}


// Experimental.
func NewSecretProviderClass(scope constructs.Construct, id *string, props *SecretProviderClassProps) SecretProviderClass {
	_init_.Initialize()

	j := jsiiProxy_SecretProviderClass{}

	_jsii_.Create(
		"cdk8s-secrets-store-csi-driver.SecretProviderClass",
		[]interface{}{scope, id, props},
		&j,
	)

	return &j
}

// Experimental.
func NewSecretProviderClass_Override(s SecretProviderClass, scope constructs.Construct, id *string, props *SecretProviderClassProps) {
	_init_.Initialize()

	_jsii_.Create(
		"cdk8s-secrets-store-csi-driver.SecretProviderClass",
		[]interface{}{scope, id, props},
		s,
	)
}

// Experimental.
func SecretProviderClass_Manifest(props *SecretProviderClassProps) interface{} {
	_init_.Initialize()

	var returns interface{}

	_jsii_.StaticInvoke(
		"cdk8s-secrets-store-csi-driver.SecretProviderClass",
		"manifest",
		[]interface{}{props},
		&returns,
	)

	return returns
}

// Returns the `ApiObject` named `Resource` which is a child of the given construct.
//
// If `c` is an `ApiObject`, it is returned directly. Throws an
// exception if the construct does not have a child named `Default` _or_ if
// this child is not an `ApiObject`.
// Experimental.
func SecretProviderClass_Of(c constructs.IConstruct) cdk8s.ApiObject {
	_init_.Initialize()

	var returns cdk8s.ApiObject

	_jsii_.StaticInvoke(
		"cdk8s-secrets-store-csi-driver.SecretProviderClass",
		"of",
		[]interface{}{c},
		&returns,
	)

	return returns
}

func SecretProviderClass_GVK() *cdk8s.GroupVersionKind {
	_init_.Initialize()
	var returns *cdk8s.GroupVersionKind
	_jsii_.StaticGet(
		"cdk8s-secrets-store-csi-driver.SecretProviderClass",
		"GVK",
		&returns,
	)
	return returns
}

func (s *jsiiProxy_SecretProviderClass) AddDependency(dependencies ...constructs.IConstruct) {
	args := []interface{}{}
	for _, a := range dependencies {
		args = append(args, a)
	}

	_jsii_.InvokeVoid(
		s,
		"addDependency",
		args,
	)
}

func (s *jsiiProxy_SecretProviderClass) AddJsonPatch(ops ...cdk8s.JsonPatch) {
	args := []interface{}{}
	for _, a := range ops {
		args = append(args, a)
	}

	_jsii_.InvokeVoid(
		s,
		"addJsonPatch",
		args,
	)
}

func (s *jsiiProxy_SecretProviderClass) OnPrepare() {
	_jsii_.InvokeVoid(
		s,
		"onPrepare",
		nil, // no parameters
	)
}

func (s *jsiiProxy_SecretProviderClass) OnSynthesize(session constructs.ISynthesisSession) {
	_jsii_.InvokeVoid(
		s,
		"onSynthesize",
		[]interface{}{session},
	)
}

func (s *jsiiProxy_SecretProviderClass) OnValidate() *[]*string {
	var returns *[]*string

	_jsii_.Invoke(
		s,
		"onValidate",
		nil, // no parameters
		&returns,
	)

	return returns
}

func (s *jsiiProxy_SecretProviderClass) ToJson() interface{} {
	var returns interface{}

	_jsii_.Invoke(
		s,
		"toJson",
		nil, // no parameters
		&returns,
	)

	return returns
}

func (s *jsiiProxy_SecretProviderClass) ToString() *string {
	var returns *string

	_jsii_.Invoke(
		s,
		"toString",
		nil, // no parameters
		&returns,
	)

	return returns
}

// Experimental.
type SecretProviderClassList interface {
	cdk8s.ApiObject
	// The group portion of the API version (e.g. `authorization.k8s.io`).
	// Experimental.
	ApiGroup() *string
	// The object's API version (e.g. `authorization.k8s.io/v1`).
	// Experimental.
	ApiVersion() *string
	// The chart in which this object is defined.
	// Experimental.
	Chart() cdk8s.Chart
	// The object kind.
	// Experimental.
	Kind() *string
	// Metadata associated with this API object.
	// Experimental.
	Metadata() cdk8s.ApiObjectMetadataDefinition
	// The name of the API object.
	//
	// If a name is specified in `metadata.name` this will be the name returned.
	// Otherwise, a name will be generated by calling
	// `Chart.of(this).generatedObjectName(this)`, which by default uses the
	// construct path to generate a DNS-compatible name for the resource.
	// Experimental.
	Name() *string
	// Create a dependency between this ApiObject and other constructs.
	//
	// These can be other ApiObjects, Charts, or custom.
	// Experimental.
	AddDependency(dependencies ...constructs.IConstruct)
	// Applies a set of RFC-6902 JSON-Patch operations to the manifest synthesized for this API object.
	//
	// Example:
	//     kubePod.addJsonPatch(JsonPatch.replace('/spec/enableServiceLinks', true));
	//
	// Experimental.
	AddJsonPatch(ops ...cdk8s.JsonPatch)
	// Perform final modifications before synthesis.
	//
	// This method can be implemented by derived constructs in order to perform
	// final changes before synthesis. prepare() will be called after child
	// constructs have been prepared.
	//
	// This is an advanced framework feature. Only use this if you
	// understand the implications.
	// Experimental.
	OnPrepare()
	// Allows this construct to emit artifacts into the cloud assembly during synthesis.
	//
	// This method is usually implemented by framework-level constructs such as `Stack` and `Asset`
	// as they participate in synthesizing the cloud assembly.
	// Experimental.
	OnSynthesize(session constructs.ISynthesisSession)
	// Validate the current construct.
	//
	// This method can be implemented by derived constructs in order to perform
	// validation logic. It is called on all constructs before synthesis.
	//
	// Returns: An array of validation error messages, or an empty array if there the construct is valid.
	// Deprecated: use `Node.addValidation()` to subscribe validation functions on this construct
	// instead of overriding this method.
	OnValidate() *[]*string
	// Renders the object to Kubernetes JSON.
	//
	// To disable sorting of dictionary keys in output object set the
	// `CDK8S_DISABLE_SORT` environment variable to any non-empty value.
	// Experimental.
	ToJson() interface{}
	// Returns a string representation of this construct.
	// Experimental.
	ToString() *string
}

// The jsii proxy struct for SecretProviderClassList
type jsiiProxy_SecretProviderClassList struct {
	internal.Type__cdk8sApiObject
}

func (j *jsiiProxy_SecretProviderClassList) ApiGroup() *string {
	var returns *string
	_jsii_.Get(
		j,
		"apiGroup",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_SecretProviderClassList) ApiVersion() *string {
	var returns *string
	_jsii_.Get(
		j,
		"apiVersion",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_SecretProviderClassList) Chart() cdk8s.Chart {
	var returns cdk8s.Chart
	_jsii_.Get(
		j,
		"chart",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_SecretProviderClassList) Kind() *string {
	var returns *string
	_jsii_.Get(
		j,
		"kind",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_SecretProviderClassList) Metadata() cdk8s.ApiObjectMetadataDefinition {
	var returns cdk8s.ApiObjectMetadataDefinition
	_jsii_.Get(
		j,
		"metadata",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_SecretProviderClassList) Name() *string {
	var returns *string
	_jsii_.Get(
		j,
		"name",
		&returns,
	)
	return returns
}


// Experimental.
func NewSecretProviderClassList(scope constructs.Construct, id *string, props *SecretProviderClassListProps) SecretProviderClassList {
	_init_.Initialize()

	j := jsiiProxy_SecretProviderClassList{}

	_jsii_.Create(
		"cdk8s-secrets-store-csi-driver.SecretProviderClassList",
		[]interface{}{scope, id, props},
		&j,
	)

	return &j
}

// Experimental.
func NewSecretProviderClassList_Override(s SecretProviderClassList, scope constructs.Construct, id *string, props *SecretProviderClassListProps) {
	_init_.Initialize()

	_jsii_.Create(
		"cdk8s-secrets-store-csi-driver.SecretProviderClassList",
		[]interface{}{scope, id, props},
		s,
	)
}

// Experimental.
func SecretProviderClassList_Manifest(props *SecretProviderClassListProps) interface{} {
	_init_.Initialize()

	var returns interface{}

	_jsii_.StaticInvoke(
		"cdk8s-secrets-store-csi-driver.SecretProviderClassList",
		"manifest",
		[]interface{}{props},
		&returns,
	)

	return returns
}

// Returns the `ApiObject` named `Resource` which is a child of the given construct.
//
// If `c` is an `ApiObject`, it is returned directly. Throws an
// exception if the construct does not have a child named `Default` _or_ if
// this child is not an `ApiObject`.
// Experimental.
func SecretProviderClassList_Of(c constructs.IConstruct) cdk8s.ApiObject {
	_init_.Initialize()

	var returns cdk8s.ApiObject

	_jsii_.StaticInvoke(
		"cdk8s-secrets-store-csi-driver.SecretProviderClassList",
		"of",
		[]interface{}{c},
		&returns,
	)

	return returns
}

func SecretProviderClassList_GVK() *cdk8s.GroupVersionKind {
	_init_.Initialize()
	var returns *cdk8s.GroupVersionKind
	_jsii_.StaticGet(
		"cdk8s-secrets-store-csi-driver.SecretProviderClassList",
		"GVK",
		&returns,
	)
	return returns
}

func (s *jsiiProxy_SecretProviderClassList) AddDependency(dependencies ...constructs.IConstruct) {
	args := []interface{}{}
	for _, a := range dependencies {
		args = append(args, a)
	}

	_jsii_.InvokeVoid(
		s,
		"addDependency",
		args,
	)
}

func (s *jsiiProxy_SecretProviderClassList) AddJsonPatch(ops ...cdk8s.JsonPatch) {
	args := []interface{}{}
	for _, a := range ops {
		args = append(args, a)
	}

	_jsii_.InvokeVoid(
		s,
		"addJsonPatch",
		args,
	)
}

func (s *jsiiProxy_SecretProviderClassList) OnPrepare() {
	_jsii_.InvokeVoid(
		s,
		"onPrepare",
		nil, // no parameters
	)
}

func (s *jsiiProxy_SecretProviderClassList) OnSynthesize(session constructs.ISynthesisSession) {
	_jsii_.InvokeVoid(
		s,
		"onSynthesize",
		[]interface{}{session},
	)
}

func (s *jsiiProxy_SecretProviderClassList) OnValidate() *[]*string {
	var returns *[]*string

	_jsii_.Invoke(
		s,
		"onValidate",
		nil, // no parameters
		&returns,
	)

	return returns
}

func (s *jsiiProxy_SecretProviderClassList) ToJson() interface{} {
	var returns interface{}

	_jsii_.Invoke(
		s,
		"toJson",
		nil, // no parameters
		&returns,
	)

	return returns
}

func (s *jsiiProxy_SecretProviderClassList) ToString() *string {
	var returns *string

	_jsii_.Invoke(
		s,
		"toString",
		nil, // no parameters
		&returns,
	)

	return returns
}

// Experimental.
type SecretProviderClassListProps struct {
	// Experimental.
	Items *[]*SecretProviderClassProps `field:"optional" json:"items" yaml:"items"`
	// Experimental.
	Meta *k8s.ListMeta `field:"optional" json:"meta" yaml:"meta"`
}

// Experimental.
type SecretProviderClassProps struct {
	// Standard object's metadata.
	// Experimental.
	Metadata *k8s.ObjectMeta `field:"optional" json:"metadata" yaml:"metadata"`
	// Experimental.
	Spec *SecretProviderClassSpec `field:"optional" json:"spec" yaml:"spec"`
	// Experimental.
	Status *SecretProviderClassStatus `field:"optional" json:"status" yaml:"status"`
}

// Experimental.
type SecretProviderClassSpec struct {
	// Experimental.
	Parameters *map[string]*string `field:"optional" json:"parameters" yaml:"parameters"`
	// Experimental.
	Provider Provider `field:"optional" json:"provider" yaml:"provider"`
	// Experimental.
	SecretObjects *[]*SecretObject `field:"optional" json:"secretObjects" yaml:"secretObjects"`
}

// Experimental.
type SecretProviderClassStatus struct {
	// Experimental.
	ByPod *[]*ByPodStatus `field:"optional" json:"byPod" yaml:"byPod"`
}

